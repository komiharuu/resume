// prisma/schema.prisma

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  userId          Int         @id @default(autoincrement()) @map("userId")
  email           String      @unique @map("email")
  name            String      @map("name")
  role            Role        @default(APPLICANT)
  password        String      @map("password")
  snsId           String?     @map("snsId")
  provider        provider    @default(LOCAL)           @map("provider")
  createdAt       DateTime    @default(now()) @map("createdAt")
  updatedAt       DateTime    @updatedAt @map("updatedAt")


 @@unique([userId])
  resume   Resume[]
  resumeLog ResumeLog[] 
  @@map("Users")
}

enum provider {
LOCAL
NAVER
}



model Resume {
  resumeId    Int      @id @default(autoincrement()) @map("resumeId")
  userId    Int      @map("userId") 
  title     String   @map("title")
  introduce   String   @map("introduce") @db.Text
  status      ResumeStatus   @default(APPLY)
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  
  user     User    @relation(fields: [userId], references: [userId])
  resumeLog ResumeLog[]
  @@map("Resumes")
}


model ResumeLog {
  logId        Int      @id @default(autoincrement())
  resumeId    Int      @map("resumeId")
  recruiterId Int     @map("recruiterId")
 status    ResumeStatus   @map("status")
  newstatus    ResumeStatus   @map("newstatus")
  reason       String   @map("reason")
  updatedAt    DateTime @default(now()) @map("timestamp")
  resumes      Resume  @relation(fields: [resumeId], references: [resumeId])
   user         User @relation(fields: [recruiterId], references: [userId])
    @@map("ResumeLogs")

}

model emailCode {
  code Int      @unique
  email            String @unique
  createdAt        DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("email")
}



enum ResumeStatus {
APPLY
DROP
PASS
INTERVIEW1
INTERVIEW2
FINAL_PASS
}



enum Role {
APPLICANT
    RECRUITER
}

model RefreshToken {
 tokenId           Int       @id @default(autoincrement())
  token        String?   
  userId       Int
  expiresAt    DateTime   @default(now()) @map("expiresAt")
  @@unique([userId])
  @@map("RefreshTokens")
}


